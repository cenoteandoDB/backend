# From graphql-scalars
scalar DateTime
scalar URL
scalar Latitude
scalar Longitude

enum CenoteType {
  NO_TYPE
  CENOTE
  DRY_CAVE
  WATER_WELL
  WATERY # TODO: Come up with better term for "aguada", maybe WATER_POINT?
}

enum CenoteIssue {
  GEOTAG_NOT_VERIFIED
}

type CityDistances {
  location: String!
  distance: Float
  time: Int
}

# TODO: Reference, Species, VariableWithData

type Cenote {
  firestore_id: ID!
  cenoteando_id: ID!

  name: String!
  altnames: [String!]!
  state: String!
  municipality: String!
  type: CenoteType

  touristic: Boolean!
  latitude: Latitude!
  longitude: Longitude!

  variable_count: Int!
  reference_count: Int!
  species_count: Int!

  photos: [URL!]
  maps: [URL!]

  createdAt: DateTime
  updatedAt: DateTime

  # social: CenoteSocialData

  # references: [Reference!]
  # species: [Species!]

  # TODO: Define how this data is fetched by the frontend.
  # data: [VariableWithData]

  # creator: User
  # contributors: [User]

  # distances: [CityDistances]

  # reviewed: Boolean
}

type CenoteList {
  cenotes: [Cenote!]!
  totalCount: Int!
}

type FavouriteCenote {
  firestore_id: ID!
  cenoteando_id: ID!
  name: String!
  type: CenoteType
  touristic: Boolean!
  state: String!
  municipality: String!
  thumbnail: String!
}