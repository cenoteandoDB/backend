scalar Latitude
scalar Longitude

input CoordinatesInput {
  latitude: Latitude!
  longitude: Longitude!
}

input NewCenoteInput {
    name: String
    state: String
    municipality: String
    type: CenoteType
    touristic: Boolean!
    latitude: Latitude
    longitude: Longitude
}

input UpdatedCenoteInput {
    name: String
    state: String
    municipality: String
    type: CenoteType
    touristic: Boolean!
    latitude: Latitude
    longitude: Longitude
}

input PhotoOrMapUploadInput {
  cenoteId: ID!
  filename: String!
  content: String!
  extension: String!
}

type Mutation {
  # Mutation fields go here
  createCenote(new_cenote: NewCenoteInput!): Cenote
  updateCenote(cenoteId: String!, updated_cenote: UpdatedCenoteInput!): Cenote
  deleteCenote(id: ID!): Boolean
  uploadPhoto(photoInput: PhotoOrMapUploadInput!): Boolean
  uploadMap(mapInput: PhotoOrMapUploadInput!): Boolean

  # TODO: Curation Pipeline
  # -> Curation mutations (create new cenote, update cenote details, )
  # -> Collaboration mutations (submit proposal: new cenote, update cenote details, new measurement, etc.) - These should always be linked with the corresponding evidence.
}
