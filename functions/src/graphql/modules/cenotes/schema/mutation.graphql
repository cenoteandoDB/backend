scalar Latitude
scalar Longitude

input CoordinatesInput {
  latitude: Latitude!
  longitude: Longitude!
}

input NewCenoteInput {
  coordinates: CoordinatesInput!
}

input UpdatedCenoteInput {
  id: ID!
  touristic: Boolean
  # location: CenoteLocation
  type: CenoteType
  name: String
  alternativeNames: [String!]

  issues: [CenoteIssue]
  # social: CenoteSocialData

  # references: [Reference!]
  # species: [Species!]
}

input PhotoOrMapUploadInput {
  cenoteId: ID!
  filename: String!
  content: String!
  extension: String!
}

type Mutation {
  # Mutation fields go here
  createCenote(new_cenote: NewCenoteInput!): Cenote
  updateCenote(updated_cenote: UpdatedCenoteInput!): Cenote
  deleteCenote(id: ID!): Boolean
  uploadPhoto(photoInput: PhotoOrMapUploadInput!): Boolean
  uploadMap(mapInput: PhotoOrMapUploadInput!): Boolean

  # TODO: Curation Pipeline
  # -> Curation mutations (create new cenote, update cenote details, )
  # -> Collaboration mutations (submit proposal: new cenote, update cenote details, new measurement, etc.) - These should always be linked with the corresponding evidence.

  changeCenoteMainPhoto(cenoteId: ID!, photoId: String!): [Photo!]!
}
