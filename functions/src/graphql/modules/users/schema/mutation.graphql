# From graphql-scalars
scalar EmailAddress

input RegisterUserInput {
    name: String!
    surname: String!
    email: EmailAddress!
    password: String!
    role: UserRole!
    phone: String
}

input UpdateUserInfoInput {
    name: String!
    surname: String!
    email: EmailAddress!

    role: UserRole!
    # profile: String!
    # profileData: Profile
}

input UpdateCenotePermissions {
    cenoteViewWhiteList: [String!]!
    cenoteViewBlackList: [String!]!

    cenoteEditWhiteList: [String!]!
    cenoteEditBlackList: [String!]!
}

input UpdateVariablePermissions {
    variableViewWhiteList: [String!]!
    variableViewBlackList: [String!]!

    variableEditWhiteList: [String!]!
    variableEditBlackList: [String!]!
}

type Mutation {
    login(email: EmailAddress!, password: String!): String!  # Access token
    inviteUser(email: EmailAddress!, name: String!, userRole: UserRole!): Boolean!
    register(userInfo: RegisterUserInput!): User!
    updateUserInfo(userId: String!, userInfo: UpdateUserInfoInput!): User
    updateCenotePermissions(userId: String!, cenotePermissions: UpdateCenotePermissions!): User
    updateVariablePermissions(userId: String!, variablePermissions: UpdateVariablePermissions!): User
    deleteUser(userId: ID!): Boolean!
}